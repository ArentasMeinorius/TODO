// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TODO.DBContext;

namespace TODO.Migrations
{
    [DbContext(typeof(TODODBContext))]
    partial class TODODBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TODO.DBSchemas.TodoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Lists");

                    b.ToTable("Lists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "12 Angry Men",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Avengers: Infinity War",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Forrest Gump",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("TODO.DBSchemas.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<sbyte>("Completed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((sbyte)0);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TodoListId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Tasks");

                    b.HasIndex("TodoListId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = (sbyte)0,
                            ListId = 1,
                            Name = "Romance",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = (sbyte)0,
                            ListId = 1,
                            Name = "Western",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Completed = (sbyte)0,
                            ListId = 1,
                            Name = "Drama",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Completed = (sbyte)0,
                            ListId = 2,
                            Name = "Romance",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Completed = (sbyte)0,
                            ListId = 2,
                            Name = "Horror",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Completed = (sbyte)0,
                            ListId = 2,
                            Name = "Western",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Completed = (sbyte)0,
                            ListId = 3,
                            Name = "Drama",
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Completed = (sbyte)0,
                            ListId = 3,
                            Name = "Comedy",
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Completed = (sbyte)0,
                            ListId = 3,
                            Name = "Western",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("TODO.DBSchemas.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 6, 13, 11, 4, 40, 547, DateTimeKind.Local).AddTicks(8222));

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<int?>("ListId1")
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Users");

                    b.HasIndex("ListId1");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListId = 1,
                            PassWord = "ALk0SFF27J/KzzOwNNQVio4sioq4H+hijLZ/rtBO6U/pN+Bi41l8+nDDinMhB0AxNg==",
                            UserName = "Tarantino@gmail.com1"
                        },
                        new
                        {
                            Id = 2,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListId = 2,
                            PassWord = "AGBTbw6rB+WS6gBbViD1PKSHHbnUrt4SEDjkl6gS4PtFddyI9j2mF6aCGuDZiMajIg==",
                            UserName = "Kubrick@gmail.com2"
                        });
                });

            modelBuilder.Entity("TODO.DBSchemas.Admin", b =>
                {
                    b.HasBaseType("TODO.DBSchemas.User");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CreationDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListId = 3,
                            PassWord = "ALqCSSNEXiR9NIZyYKZfb7RxGETmHN7AF7oWi7DRQt3vEBHc7JhmyrzYxRPTcrqYyQ==",
                            UserName = "Spielberg@gmail.com3"
                        });
                });

            modelBuilder.Entity("TODO.DBSchemas.TodoTask", b =>
                {
                    b.HasOne("TODO.DBSchemas.TodoList", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TodoListId");
                });

            modelBuilder.Entity("TODO.DBSchemas.User", b =>
                {
                    b.HasOne("TODO.DBSchemas.TodoList", "List")
                        .WithMany()
                        .HasForeignKey("ListId1");

                    b.Navigation("List");
                });

            modelBuilder.Entity("TODO.DBSchemas.Admin", b =>
                {
                    b.HasOne("TODO.DBSchemas.User", null)
                        .WithOne()
                        .HasForeignKey("TODO.DBSchemas.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TODO.DBSchemas.TodoList", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
